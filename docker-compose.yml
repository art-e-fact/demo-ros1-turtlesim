## USAGE: Run the turtle service with the simple: docker-compose run --rm turtle

version: "3"
services:
  ### provides a development environment for turtle sim demos
  turtle:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - usr_name=turtle
        - usr_group=turtle
        - usr_uid=1000
        - usr_gid=1000
    tty: true
    stdin_open: true
    network_mode: host
    command: "/bin/bash"
    environment:
      - "DISPLAY=$DISPLAY"
      - "XAUTHORITY=/tmp/.docker.xauth"
    volumes:
      # First, create a named volume to make the build data persistent
      - workspace_data:/home/turtle/ros_workspace/
      # Then, mount the source code from the host to the container
      - ./ros_workspace/src:/home/turtle/ros_workspace/src
      # Also mount the rosbag folder for convenient data logging input/output
      - ./rosbags:/rosbags:rw
      # (optional) Mount the warp-client to automate testing
      - ../warp-client:/warp-client
      # sync timezone with host and ensure X11 settings
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - /dev/log:/dev/log:rw

# Declare the volume used to hold the ROS workspace build artifacts
volumes:
  workspace_data:
