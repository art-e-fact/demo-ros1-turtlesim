<!-- top-level launch test file
provides resources as requested by the user in the artefact.yaml file
includes the launch test file defined by the user
 -->
 <!-- example cli command
roslaunch testing ros1_test.launch ros1_testpackage:=testing ros1_testfile:=test_odometry.launch simulator:=none
  -->

<launch>
  <arg name="param_file" />
  <arg name="ros1_testpackage" />
  <arg name="ros1_testfile" />
  <arg name="simulator" />
  <arg name="rosbag_args" />

  <!-- provide parameters from artefact.yaml onto rosparam server -->
  <rosparam
    file="$(arg param_file)"
    command="load"
  />

  <!-- provide a simulator environment -->
  <node if="$(eval arg('simulator') == 'turtlesim')"
    name="turtlesim"
    pkg="turtlesim"
    type="turtlesim_node"
  />

  <!-- provide a data recorder -->
  <node if="$(eval not arg('rosbag_args')=='none')"
    pkg="rosbag"
    type="record"
    name="rosbag_recorder"
    output="screen"
    args="$(arg rosbag_args)"
  />

  <!-- include the launch test file defined by the user in artefact.yaml -->
  <include
    file="$(eval find(ros1_testpackage) + '/launch/' + ros1_testfile)"
  />

</launch>
