version: 0.1.0

project: demo-ros1-turtlesim
jobs:
  basic_turtle: # Overall job name
    type: test
    runtime:
      simulator: turtlesim
      framework: ros1:0
      pre_launch: echo hello  # command to be executed before launching the test. use it to perform any setup before simulator launch
    timeout: 5 # minutes
    scenarios:
      defaults: # Global to all scenarios, and overriden in specific scenarios.
        output_dirs: [/tmp/outputs/]
        subscriptions:
          pose: turtle1/pose
          result: turtle1/odometry
        rosbag_record: subscriptions
        ros_testpackage: turtle_odometry
        ros_testfile: turtle_odometry.launch
        rosbag_postprocess: turtle_post_process.py --skip_metrics --skip_figures
      settings:
        # - name: turtle
        #   params:
        #     # test/param1: 1
        #     # test/nested_ns/param2: 2.5
        #     test/start_pose: [[1, 1, 0]]  # [x, y, theta]
        #     test/segment_length: 5  # for square trajectory
        #     test/odom_tuning_theta: 0.01   # demo: tune odometry algorithm
        #     test/odom_tuning_forward: 0.1  # demo: tune odometry algorithm
        - name: turtle_quick
          params:
            test/start_pose: [[1, 1, 0]]  # [x, y, theta]
            test/segment_length: 1  # for square trajectory
            test/odom_tuning_theta: 0.01   # demo: tune odometry algorithm
            test/odom_tuning_forward: 0.1  # demo: tune odometry algorithm
        # - name: turtle_fail
        #   params:
        #     test/start_pose: [[-1, 1, 0]]  # [x, y, theta]
        #     test/segment_length: 1  # for square trajectory
        #     test/odom_tuning_theta: 0.01   # demo: tune odometry algorithm
        #     test/odom_tuning_forward: 0.1  # demo: tune odometry algorithm
        # - name: turtle_gridsearch_traj
        #   params:
        #     test/start_pose: [[1, 1, 0], [2.5, 2.5, 0]]  # [x, y, theta]
        #     test/segment_length: [7, 2]  # for square trajectory
        #     test/odom_tuning_theta: 0.01   # demo: tune odometry algorithm
        #     test/odom_tuning_forward: 0.1  # demo: tune odometry algorithm
        # - name: turtle_gridsearch_odom
        #   params:
        #     test/start_pose: [[1, 1, 0]]  # [x, y, theta]
        #     test/segment_length: 7  # for square trajectory
        #     test/odom_tuning_theta: [0, 0.01, 0.1]   # demo: tune odometry algorithm
        #     test/odom_tuning_forward: 0.1  # demo: tune odometry algorithm
  dummy_other:
      type: test
      runtime:
        simulator: turtlesim
        framework: other
      timeout: 5 # minutes
      scenarios:
        defaults: # Global to all scenarios, and overriden in specific scenarios.
          run: "echo 'hello'"
        settings:
          - name: dummy
            params:
              test1: 42
